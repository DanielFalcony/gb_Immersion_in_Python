import doctest

"""
Задание
Решить задачи, которые не успели решить на семинаре.
Возьмите 1-3 задачи из тех, что были на прошлых
семинарах или в домашних заданиях.
Напишите к ним тесты.
2-5 тестов на задачу в трёх вариантах:
○ doctest,
○ unittest,
○ pytest. 

Треугольник существует только тогда, когда сумма любых двух его сторон больше третьей.
Дано a, b, c - стороны предполагаемого треугольника.
Требуется сравнить длину каждого отрезка-стороны с суммой двух других.
Если хотя бы в одном случае отрезок окажется больше суммы двух других, то треугольника с такими сторонами не существует.
Отдельно сообщить является ли треугольник разносторонним, равнобедренным или равносторонним.
"""


def check_triangle(a, b, c):
    """
    Проверяет существование треугольника и определяет его тип на основе длин сторон.

    Args:
        a (float): Длина первой стороны треугольника.
        b (float): Длина второй стороны треугольника.
        c (float): Длина третьей стороны треугольника.

    Returns:
        str: Результат проверки существования и типа треугольника.

    Examples:
        >>> check_triangle(5, 7, 5)
        'Равнобедренный треугольник'

        >>> check_triangle(5, 7, 9)
        'Разносторонний треугольник'

        >>> check_triangle(5, 5, 5)
        'Равносторонний треугольник'

        >>> check_triangle(0, 1, 2)
        'Треугольник не существует'
    """
    sides = (a, b, c)  # Создаем множество из сторон треугольника

    # Проверка условия существования треугольника
    for side in sides:
        if side >= sum(sides) - side:
            return f'Треугольник не существует'
    # Проверка типа треугольника
    if len(set(sides)) == 1:
        return f'Равносторонний треугольник'
    elif len(set(sides)) == 2:
        return f'Равнобедренный треугольник'
    else:
        return f'Разносторонний треугольник'


if __name__ == '__main__':
    print(check_triangle(5, 7, 5))
    print(check_triangle(5, 7, 9))
    print(check_triangle(5, 5, 5))
    print(check_triangle(0, 1, 2))
    print(check_triangle(4, -5, 6))
    doctest.testmod(verbose=True)
